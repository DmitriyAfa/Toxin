mixin dropdown(props = {})
  -
    const {
      type="text",
      isFocused=false,
      size="big",
      items=[],
      value="",
      hidden=true,
      name='',
      dataMultipleDateSeparator=undefined,
      variant='',
      placeholder='',
      title='dropdown',
      subtitle=undefined,
      gap='5',
    } = props

    const isAmenities = name === 'amenities'
    const hasFooter = (name === 'amenities' || name === 'guests')

    const dropdownSize = !isAmenities && `dropdown_size_${size}`
    const hiddenDropClass = hidden && 'dropdown__drop_hidden'
    const inputRadius = isAmenities ? 'top-radius-smallest' : 'smallest'

    const classes = [dropdownSize]

  +named-wrapper({
    title: title,
    subtitle: subtitle,
    gap: gap,
  })
    .dropdown.js-dropdown&attributes({
      class: classes,
      'data-name': name,
    })
      +form-wrapper({
        radiusVariant: inputRadius,
        additionalClass: 'js-dropdown__form-wrapper dropdown__form-wrapper',
      })
        +input({
          readonly: true,
          size: size,
          value: value,
          type: type,
          'data-multiple-date-separator': dataMultipleDateSeparator,
          placeholder: placeholder,
          disabled: true,
        })
        span.js-dropdown__button-expand
          +button-expand()
      if hasFooter
        ul.dropdown__drop.js-dropdown__drop(class=hiddenDropClass)
          each item in items
            +dropdown-item({
              title: item.title,
              value: item.value,
              itemName: item.itemName,
            })
          if  name === 'guests'
            li.dropdown__footer.js-dropdown__footer
              +button({
                name: 'clear',
                visability: false,
              })
                +text({
                  h3: 'очистить',
                  color: 'primary'
                })
              +button()
                +text({
                  h3: 'применить',
                  color: 'primary',
                })
